import sys
import os
from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QPushButton, QFileDialog, QProgressBar, QLabel, QTextEdit, QMessageBox
from PyQt6.QtCore import Qt, QThreadPool, QRunnable, pyqtSignal, QObject, pyqtSlot, QByteArray
from PyQt6.QtGui import QIcon, QPixmap, QImage  # 从 PyQt6.QtGui 导入 QIcon
import base64

# 假设你有一个base64编码的图标字符串
icon_base64 = """

"""

class CleanTask(QRunnable):
    """清理任务类，继承自QRunnable，用于在后台线程中执行清理操作"""
    
    def __init__(self, root_path, progress_bar, label):
        """初始化方法，设置要清理的根路径、进度条和状态标签"""
        super().__init__()
        self.root_path = root_path  # U盘或目录的根路径
        self.progress_bar = progress_bar  # GUI中的进度条组件
        self.label = label  # GUI中的状态标签组件
        self.signals = WorkerSignals()  # 用于信号和槽通信的对象

    @pyqtSlot()
    def run(self):
        """运行方法，在后台线程中执行清理操作"""
        all_items = list(os.walk(self.root_path))  # 获取所有文件和目录列表
        total_files = sum(len(files) for _, _, files in all_items)  # 计算总文件数
        processed_files = 0  # 已处理的文件计数

        self.signals.started.emit(f"开始清理U盘：{self.root_path}")  # 发送开始信号，更新状态标签
        for dirpath, _, filenames in all_items:
            for filename in filenames:
                if filename.startswith("._"):  # 检查文件名是否以“._”开头
                    file_path = os.path.join(dirpath, filename)  # 构建文件的完整路径
                    try:
                        os.remove(file_path)  # 尝试删除文件
                        self.signals.update.emit(f"已删除 {file_path}")  # 发送更新信号，显示删除信息
                    except Exception as e:
                        self.signals.update.emit(f"无法删除 {file_path}: {e}")  # 如果删除失败，发送错误信息
                    processed_files += 1  # 更新已处理文件计数
                    self.signals.progress.emit(int((processed_files / total_files) * 100))  # 发送进度信号，更新进度条
        
        self.signals.finished.emit(f"完成清理，共处理了 {processed_files} 个文件。")  # 发送完成信号，更新状态标签

class WorkerSignals(QObject):
    """信号类，用于在清理任务和主GUI线程之间传递信号"""
    
    started = pyqtSignal(str)  # 清理开始时发出的信号
    update = pyqtSignal(str)  # 清理过程中更新状态时发出的信号
    progress = pyqtSignal(int)  # 更新进度条时发出的信号
    finished = pyqtSignal(str)  # 清理完成时发出的信号

class CleanerApp(QWidget):
    """主窗口类，包含选择路径按钮、进度条、状态标签、功能简介和开始清理按钮"""
    
    def __init__(self):
        """初始化方法，设置窗口标题、大小和布局"""
        super().__init__()
        self.initUI()

    def initUI(self):
        """初始化用户界面的方法"""
        self.setWindowTitle('U盘清理工具')  # 设置窗口标题

        # 设置窗口的固定大小（不可调整）
        self.setFixedSize(500, 450)  # 宽度为550像素，高度为450像素

        # 设置应用图标
        self.setWindowIcon(self.load_icon_from_base64(icon_base64))

        layout = QVBoxLayout()  # 创建垂直布局

        # 功能简介部分
        intro_text = """
        <h2>U盘清理工具简介</h2>
        <p>此工具用于清理U盘或其他目录中以“._”开头的隐藏文件。<br>
           这些文件通常是macOS创建的元数据文件，可能占用额外的空间。它们就像垃圾一样。</p>
        <p><b>使用方法：</b></p>
        <ul>
            <li>点击“选择路径”按钮，选择要清理的U盘或目录。</li>
            <li>点击“开始清理”按钮，程序将自动删除所有以“._”开头的文件。</li>
            <li>清理过程中，进度条会显示当前的进度。</li>
            <li>清理完成后，会弹出消息框通知用户。</li>
        </ul>
        <p><b>注意事项：</b></p>
        <ul>
            <li>请确保在运行此工具前备份重要数据。</li>
            <li>确保有足够的权限去读取、写入以及删除目标目录上的文件。</li>
        </ul>
        """
        self.intro_label = QTextEdit(self)  # 使用 QTextEdit 显示富文本
        self.intro_label.setReadOnly(True)  # 设置为只读模式
        self.intro_label.setHtml(intro_text)  # 设置富文本内容
        layout.addWidget(self.intro_label)

        # 状态标签
        self.label = QLabel("请选择要清理的U盘路径")  # 状态标签，提示用户选择路径
        layout.addWidget(self.label)

        # 选择路径按钮
        self.selectButton = QPushButton('选择路径', self)  # 选择路径按钮
        self.selectButton.clicked.connect(self.selectDirectory)  # 绑定点击事件到选择目录方法
        layout.addWidget(self.selectButton)

        # 进度条
        self.progressBar = QProgressBar(self)  # 进度条组件
        self.progressBar.setValue(0)  # 设置初始进度为0
        layout.addWidget(self.progressBar)

        # 开始清理按钮
        self.startButton = QPushButton('开始清理', self)  # 开始清理按钮
        self.startButton.clicked.connect(self.startCleaning)  # 绑定点击事件到开始清理方法
        self.startButton.setEnabled(False)  # 初始状态下禁用开始按钮
        layout.addWidget(self.startButton)

        self.setLayout(layout)  # 设置窗口布局

        self.threadpool = QThreadPool()  # 创建线程池对象

    def load_icon_from_base64(self, base64_string):
        """从base64字符串加载图标"""
        # 解码base64字符串为字节流
        byte_data = base64.b64decode(base64_string)
        # 创建QByteArray对象
        qbyte_array = QByteArray(byte_data)
        # 创建QImage对象并加载图像
        image = QImage.fromData(qbyte_array)
        # 创建QPixmap对象
        pixmap = QPixmap.fromImage(image)
        # 创建QIcon对象
        icon = QIcon(pixmap)
        return icon

    def selectDirectory(self):
        """选择目录方法，弹出文件对话框让用户选择要清理的目录"""
        directory = QFileDialog.getExistingDirectory(self, "选择U盘路径")  # 弹出文件夹选择对话框
        if directory:  # 如果用户选择了有效目录
            self.selected_directory = directory  # 保存选择的目录路径
            self.label.setText(f"已选择路径: {directory}")  # 更新状态标签
            self.startButton.setEnabled(True)  # 启用开始清理按钮

    def startCleaning(self):
        """开始清理方法，启动清理任务"""
        self.startButton.setEnabled(False)  # 禁用开始按钮
        self.selectButton.setEnabled(False)  # 禁用选择路径按钮
        self.progressBar.setValue(0)  # 重置进度条

        cleaner_task = CleanTask(self.selected_directory, self.progressBar, self.label)  # 创建清理任务对象
        cleaner_task.signals.started.connect(self.onStarted)  # 绑定开始信号到onStarted方法
        cleaner_task.signals.update.connect(self.onUpdate)  # 绑定更新信号到onUpdate方法
        cleaner_task.signals.progress.connect(self.onProgress)  # 绑定进度信号到onProgress方法
        cleaner_task.signals.finished.connect(self.onFinished)  # 绑定完成信号到onFinished方法

        self.threadpool.start(cleaner_task)  # 将清理任务添加到线程池并启动

    def onStarted(self, message):
        """处理开始信号的方法，更新状态标签"""
        self.label.setText(message)

    def onUpdate(self, message):
        """处理更新信号的方法，更新状态标签"""
        self.label.setText(message)

    def onProgress(self, value):
        """处理进度信号的方法，更新进度条"""
        self.progressBar.setValue(value)

    def onFinished(self, message):
        """处理完成信号的方法，更新状态标签并启用按钮"""
        self.label.setText(message)
        self.startButton.setEnabled(True)
        self.selectButton.setEnabled(True)
        QMessageBox.information(self, '完成', '清理已完成')  # 弹出消息框通知用户清理完成

if __name__ == '__main__':
    app = QApplication(sys.argv)  # 创建应用程序对象
    ex = CleanerApp()  # 创建主窗口对象
    ex.show()  # 显示主窗口
    sys.exit(app.exec())  # 进入应用程序主循环